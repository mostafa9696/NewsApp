ext {

    // Kotlin
    kotlinVersion = '1.3.72'

    // Dependencies Version - Presentation
    appcompatVersion = '1.1.0'
    androidxCoreKtxVersion = '1.1.0'
    constraintLayoutVersion = '1.1.3'
    supportV4Version = '1.0.0'
    materialVersion = '1.1.0-beta02'
    fragmentKtxVersion = '1.1.0'
    lifecycleExtensionsVersion = '2.1.0'
    glideVersion = '4.13.1'
    hiltVersion = '2.41'
    hiltCompilerVersion = '1.0.0'

    // Data
    retrofitVersion = '2.7.0'
    gsonVersion = '2.9.0'
    loggingInterceptorVersion = '4.2.1'

    // Domain
    coroutinesCoreVersion = '1.3.3'

    // Testing
    mockitoVersion = '3.2.4'
    junitVersion = '4.12'
    espressoVersion = '3.2.0'
    androidxJunitVersion = '1.1.1'
    truthVersion = '1.0'
    mockitoInlineVersion = '2.13.0'
    MOCKITO_KOTLIN = "2.1.0"
    mockWebServerVersion = '4.2.1'
    robolectricVersion = '4.3'
    androidxTestCoreVersion = '1.0.0'
    runnerVersion = '1.2.0'
    rulesVersion = '1.2.0'
    archComponentTestVersion = '2.1.0'


    // App/Presentation Layer
    appDependencies = [
            appCompat             : "androidx.appcompat:appcompat:$appcompatVersion",
            androidxKtx           : "androidx.core:core-ktx:$androidxCoreKtxVersion",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            supportV4             : "androidx.legacy:legacy-support-v4:$supportV4Version",
            material              : "com.google.android.material:material:$materialVersion",
            fragmentKtx           : "androidx.fragment:fragment-ktx:$fragmentKtxVersion",
            lifecycleExtensions   : "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion",
            glide                 : "com.github.bumptech.glide:glide:$glideVersion",
            hiltAndroid           : "com.google.dagger:hilt-android:$hiltVersion",
            hiltAndroidCompiler   : "com.google.dagger:hilt-android-compiler:$hiltVersion",
            hiltCompiler          : "androidx.hilt:hilt-compiler:$hiltCompilerVersion",
    ]

    dataDependencies = [
            retrofit          : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            gsonConverter    : "com.squareup.retrofit2:converter-gson:$gsonVersion",
            loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"
    ]

    domainDependencies = [
            kotlin        : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            coroutinesCore: "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesCoreVersion"
    ]

    testDependencies = [
            junit                 : "junit:junit:$junitVersion",
            androidxJunit         : "androidx.test.ext:junit:$androidxJunitVersion",
            espressoCore          : "androidx.test.espresso:espresso-core:$espressoVersion",
            googleTruth           : "com.google.truth:truth:$truthVersion",
            mockWebServer         : "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion",
            robolectric           : "org.robolectric:robolectric:$robolectricVersion",
            androidxCoreTest      : "androidx.test:core:$androidxTestCoreVersion",
            runner                : "androidx.test:runner:$runnerVersion",
            rules                 : "androidx.test:rules:$rulesVersion",
            espressoIntents       : "androidx.test.espresso:espresso-intents:$espressoVersion",
            espressoContrib       : "androidx.test.espresso:espresso-contrib:$espressoVersion",
            espressoIdlingResource: "androidx.test.espresso:espresso-idling-resource:$espressoVersion",
            archComponentTest     : "androidx.arch.core:core-testing:$archComponentTestVersion",
            coroutinesTest        : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesCoreVersion",
            MOCKITO               : "org.mockito:mockito-inline:$mockitoInlineVersion",
            MOCKITO_KOTLIN         : "com.nhaarman.mockitokotlin2:mockito-kotlin:$MOCKITO_KOTLIN"
    ]
}